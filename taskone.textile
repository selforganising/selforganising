---
layout: post
title: "Coding the web: task One"
category:
linktext:  ""
standfirst: "Learn Python"
---

<dl>
  
dt. The task

dd. To learn the fundamentals of computer science and enough Python to move onto the next task.

dt. Time required

dd. Two weeks

dt. The materials

dd. Udacity's Introduction to Computer Science. 

dt. Timetable

dd. Week 1: Lessons 1-5.

dd. Week 2: Lesson 6-11, including the exam after Lesson 7 and  Lesson 8 (which is a "mini-unit").

dd. We are going to aim to complete one lesson per day (and fit Lesson 8 in between days). Lessons 1-6 are each followed by a problem set and also an optional problem set. Because of the amount of material that we have to get through, it is probably more important that we try to keep to schedule than that we complete every problem. In the second week there are fewer problem sets, but the lessons get more challenging.

dt. Pair programming

dd. In the first week, try to go through the first few in-lesson exercises on your own and if you do not understand something, view the answer and try again. When you have finished a lesson, but before you have started on a problem set, check to see if anyone who is still working through the lesson would like to pair program with you on any of the exercises.

dd. As you work through the Problem Sets, keep an eye out for anyone looking for an opportunity to pair program. As well as offering to pair on a problem that you have already worked on, you may also find it useful to pair on a problem that is new to both of you.

dd. If you are already familiar with Python (or are a quick learner), the optional problem sets mean you are unlikely to run out of material.

dd. Also, remember that pairing on a problem that you have already completed can be as useful to you as to the person you are pairing with. Communicating ideas that you have just yourself learnt is a very good way of deepening your understanding.

</dl>










